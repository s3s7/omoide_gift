<!-- ギフトカテゴリ新規作成 -->
<div class="space-y-6">
  <!-- ページヘッダー -->
  <div class="flex items-center justify-between">
    <div>
      <h1 class="text-2xl font-bold text-gray-900">
        <i class="fas fa-plus mr-3 text-purple-600"></i>
        ギフトカテゴリの新規作成
      </h1>
      <p class="text-gray-600 mt-1">新しいカテゴリを追加してギフトアイテムを分類します</p>
    </div>
    
    <!-- 戻るボタン -->
    <div>
      <%= link_to admin_gift_item_categories_path,
          class: "inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500" do %>
        <i class="fas fa-arrow-left mr-2"></i>
        一覧に戻る
      <% end %>
    </div>
  </div>

  <!-- フォーム -->
  <div class="bg-white rounded-lg shadow-md">
    <div class="px-6 py-4 border-b border-gray-200">
      <h3 class="text-lg font-medium text-gray-900">カテゴリ情報</h3>
      <p class="text-sm text-gray-500 mt-1">ギフトアイテムのカテゴリを表す名前を入力してください</p>
    </div>

    <div class="px-6 py-6">
      <%= form_with model: [ :admin, @gift_item_category ], local: true, class: "space-y-6" do |f| %>
        
        <!-- エラーメッセージ -->
        <% if @gift_item_category.errors.any? %>
          <div class="bg-red-50 border border-red-200 rounded-lg p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <i class="fas fa-exclamation-triangle text-red-400"></i>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-red-800">
                  入力エラーがあります（<%= pluralize(@gift_item_category.errors.count, "件") %>）
                </h3>
                <div class="mt-2 text-sm text-red-700">
                  <ul class="list-disc pl-5 space-y-1">
                    <% @gift_item_category.errors.full_messages.each do |message| %>
                      <li><%= message %></li>
                    <% end %>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        <% end %>

        <!-- カテゴリ名 -->
        <div>
          <%= f.label :name, "カテゴリ名", class: "block text-sm font-medium text-gray-700 mb-2" %>
          <%= f.text_field :name, 
              class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-purple-500 focus:border-purple-500 #{@gift_item_category.errors[:name].any? ? 'border-red-300 focus:ring-red-500 focus:border-red-500' : ''}",
              placeholder: "例：食べ物、アクセサリー、本・書籍、家電など",
              maxlength: 20,
              required: true %>
          
          <!-- ヘルプテキスト -->
          <div class="mt-2 text-sm text-gray-500">
            <i class="fas fa-info-circle mr-1"></i>
            ギフトアイテムのカテゴリを表す名前を入力してください（最大20文字）
          </div>
          
          <!-- 文字数カウンタ -->
          <div class="mt-1 text-xs text-gray-400 text-right">
            <span id="name-count">0</span>/20文字
          </div>
          
          <!-- フィールド固有のエラーメッセージ -->
          <% if @gift_item_category.errors[:name].any? %>
            <div class="mt-2 text-sm text-red-600">
              <i class="fas fa-exclamation-triangle mr-1"></i>
              <%= @gift_item_category.errors[:name].first %>
            </div>
          <% end %>
        </div>

        <!-- アクションボタン -->
        <div class="flex items-center justify-end space-x-3 pt-6 border-t border-gray-200">
          <%= link_to "キャンセル", admin_gift_item_categories_path,
              class: "inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500" %>
          
          <%= f.submit "カテゴリを作成",
              class: "inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed",
              data: { disable_with: "作成中..." } %>
        </div>
      <% end %>
    </div>
  </div>

  <!-- 参考情報 -->
  <div class="bg-purple-50 border border-purple-200 rounded-lg p-4">
    <div class="flex">
      <div class="flex-shrink-0">
        <i class="fas fa-lightbulb text-purple-400"></i>
      </div>
      <div class="ml-3">
        <h3 class="text-sm font-medium text-purple-800">
          カテゴリの例
        </h3>
        <div class="mt-2 text-sm text-purple-700">
          <div class="grid grid-cols-2 md:grid-cols-4 gap-2">
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">食べ物</span>
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">アクセサリー</span>
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">本・書籍</span>
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">家電</span>
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">花・植物</span>
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">衣類</span>
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">化粧品</span>
            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">その他</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- 文字数カウンタのJavaScript -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  const nameInput = document.querySelector('#gift_item_category_name');
  const nameCount = document.querySelector('#name-count');
  
  if (nameInput && nameCount) {
    function updateCounter() {
      nameCount.textContent = nameInput.value.length;
    }
    
    nameInput.addEventListener('input', updateCounter);
    updateCounter(); // 初期値設定
  }
});
</script>