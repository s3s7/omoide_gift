<%= form_with model: gift_person do |f| %>
  <%= render 'shared/error_messages', object: f.object %>
  
  <!-- 名前入力 -->
  <div style="margin-bottom: 24px; text-align: left;">
    <%= f.label :name, "名前", style: "
      display: block;
      margin-bottom: 8px;
      font-weight: 600;
      color: #555;
      font-size: 14px;
    " %>
    <%= f.text_field :name, 
        style: "
          width: 100%;
          padding: 14px 16px;
          border: 2px solid #e1e5e9;
          border-radius: 8px;
          font-size: 16px;
          box-sizing: border-box;
          transition: border-color 0.3s ease;
        ",
        placeholder: "例：田中太郎、花子さん、おじいちゃんなど",
        required: true,
        maxlength: 255 %>
    
    <!-- ヘルプテキスト -->
    <div style="font-size: 12px; color: #888; margin-top: 8px;">
      <i class="fas fa-info-circle" style="margin-right: 4px;"></i>
      ギフト相手の名前またはニックネームを入力してください（必須）
    </div>
    
    <!-- エラーメッセージ -->
    <% if gift_person.errors[:name].any? %>
      <div style="color: #dc3545; font-size: 12px; margin-top: 8px;">
        <i class="fas fa-exclamation-triangle" style="margin-right: 4px;"></i>
        <%= gift_person.errors[:name].first %>
      </div>
    <% end %>
  </div>

  <!-- ギフト相手のプロフィール画像セクション -->
  <div style="margin-bottom: 24px; text-align: left;">
    <label style="
      display: block;
      margin-bottom: 8px;
      font-weight: 600;
      color: #555;
      font-size: 14px;
    ">
      <i class="fas fa-image" style="margin-right: 4px; color: #FC913A;"></i>
      プロフィール画像
    </label>
    
    <div style="display: flex; align-items: start; gap: 20px; flex-wrap: wrap;">
      <!-- 現在の画像表示 -->
      <div style="flex-shrink: 0;">
        <div style="position: relative;">
          <% if gift_person.has_avatar? && gift_person.display_avatar(:large) %>
            <%= image_tag gift_person.display_avatar(:large), 
                id: "current-gift-person-avatar",
                style: "width: 80px; height: 80px; border-radius: 50%; object-fit: cover; border: 3px solid #e1e5e9; box-shadow: 0 2px 8px rgba(0,0,0,0.1);" %>
          <% else %>
            <div id="current-gift-person-avatar" style="width: 80px; height: 80px; border-radius: 50%; background-color: #f8f9fa; border: 3px solid #e1e5e9; display: flex; align-items: center; justify-content: center; box-shadow: 0 2px 8px rgba(0,0,0,0.1);">
              <i class="fas fa-user" style="font-size: 24px; color: #adb5bd;"></i>
            </div>
          <% end %>
          
          <!-- プレビュー画像（JavaScript で制御） -->
          <img id="gift-person-avatar-preview" src="" alt="プレビュー" 
               style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; border: 3px solid #FC913A; position: absolute; top: 0; left: 0; display: none; box-shadow: 0 2px 8px rgba(0,0,0,0.1);">
        </div>
      </div>
      
      <div style="flex: 1; min-width: 200px;">
        <!-- ファイル選択 -->
        <div style="margin-bottom: 12px;">
          <%= f.label :avatar, "新しい画像を選択", style: "
            display: block;
            margin-bottom: 4px;
            font-size: 12px;
            font-weight: 500;
            color: #666;
          " %>
          <%= f.file_field :avatar, 
              id: "gift-person-avatar-input",
              accept: "image/jpeg,image/jpg,image/png,image/webp",
              style: "
                width: 100%;
                font-size: 13px;
                color: #555;
                padding: 8px;
                border: 1px solid #e1e5e9;
                border-radius: 4px;
                box-sizing: border-box;
              " %>
        </div>
        
        <!-- プレビューリセットボタン -->
        <div style="margin-bottom: 12px;">
          <button type="button" id="reset-gift-person-avatar-btn" 
                  style="
                    display: none;
                    padding: 6px 12px;
                    border: 1px solid #dee2e6;
                    border-radius: 4px;
                    background-color: #fff;
                    color: #666;
                    font-size: 12px;
                    cursor: pointer;
                    transition: background-color 0.2s ease;
                  ">
            <i class="fas fa-undo" style="margin-right: 4px;"></i>
            選択をリセット
          </button>
        </div>
        
        <!-- 削除オプション -->
        <% if gift_person.has_avatar? %>
          <div style="margin-bottom: 8px;">
            <%= f.check_box :remove_avatar, { id: "remove-gift-person-avatar-checkbox", style: "margin-right: 6px;" }, "1", "" %>
            <%= f.label :remove_avatar, "現在のプロフィール画像を削除する", 
                style: "font-size: 12px; color: #dc3545; font-weight: 500; cursor: pointer;" %>
          </div>
        <% end %>
      </div>
    </div>
    
    <!-- ヘルプテキスト -->
    <div style="font-size: 12px; color: #888; margin-top: 8px;">
      <i class="fas fa-info-circle" style="margin-right: 4px;"></i>
      JPEG、PNG、WEBP形式のファイルをアップロードできます（最大5MB、任意）
    </div>
    
    <!-- エラーメッセージ -->
    <% if gift_person.errors[:avatar].any? %>
      <div style="color: #dc3545; font-size: 12px; margin-top: 8px;">
        <i class="fas fa-exclamation-triangle" style="margin-right: 4px;"></i>
        <%= gift_person.errors[:avatar].first %>
      </div>
    <% end %>
  </div>

  <!-- 関係性選択 -->
  <div style="margin-bottom: 24px; text-align: left;">
    <%= f.label :relationship_id, "関係性", style: "
      display: block;
      margin-bottom: 8px;
      font-weight: 600;
      color: #555;
      font-size: 14px;
    " %>
    <%= f.select :relationship_id, 
        options_from_collection_for_select(
          (@relationships || []), 
          :id, 
          :name, 
          gift_person&.relationship_id
        ), 
        { 
          prompt: "関係性を選択してください"
        }, 
        { 
          style: "
            width: 100%;
            padding: 14px 16px;
            border: 2px solid #e1e5e9;
            border-radius: 8px;
            font-size: 16px;
            box-sizing: border-box;
            transition: border-color 0.3s ease;
          ",
          required: true
        } %>
    
    <!-- ヘルプテキスト -->
    <div style="font-size: 12px; color: #888; margin-top: 8px;">
      <i class="fas fa-info-circle" style="margin-right: 4px;"></i>
      この相手との関係性を選択してください（必須）
    </div>
    
    <!-- エラーメッセージ -->
    <% if gift_person.errors[:relationship_id].any? %>
      <div style="color: #dc3545; font-size: 12px; margin-top: 8px;">
        <i class="fas fa-exclamation-triangle" style="margin-right: 4px;"></i>
        <%= gift_person.errors[:relationship_id].first %>
      </div>
    <% end %>
  </div>

  <!-- 誕生日入力 -->
  <div style="margin-bottom: 24px; text-align: left;">
    <%= f.label :birthday, "誕生日", style: "
      display: block;
      margin-bottom: 8px;
      font-weight: 600;
      color: #555;
      font-size: 14px;
    " %>
    <%= f.date_field :birthday, 
        style: "
          width: 100%;
          padding: 14px 16px;
          border: 2px solid #e1e5e9;
          border-radius: 8px;
          font-size: 16px;
          box-sizing: border-box;
          transition: border-color 0.3s ease;
        ",
        max: Date.current.strftime('%Y-%m-%d') %>
    
    <!-- ヘルプテキスト -->
    <div style="font-size: 12px; color: #888; margin-top: 8px;">
      <i class="fas fa-info-circle" style="margin-right: 4px;"></i>
      誕生日を入力すると、プレゼント時期の参考になります（任意）
    </div>
    
    <!-- エラーメッセージ -->
    <% if gift_person.errors[:birthday].any? %>
      <div style="color: #dc3545; font-size: 12px; margin-top: 8px;">
        <i class="fas fa-exclamation-triangle" style="margin-right: 4px;"></i>
        <%= gift_person.errors[:birthday].first %>
      </div>
    <% end %>
  </div>

  <!-- 好きなもの入力 -->
  <div style="margin-bottom: 24px; text-align: left;">
    <%= f.label :likes, "好きなもの・趣味", style: "
      display: block;
      margin-bottom: 8px;
      font-weight: 600;
      color: #555;
      font-size: 14px;
    " %>
    <%= f.text_area :likes, 
        style: "
          width: 100%;
          padding: 14px 16px;
          border: 2px solid #e1e5e9;
          border-radius: 8px;
          font-size: 16px;
          box-sizing: border-box;
          transition: border-color 0.3s ease;
          min-height: 80px;
          resize: vertical;
        ",
        placeholder: "例：読書、映画鑑賞、スイーツ、花、アクセサリーなど",
        maxlength: 30 %>
    
    <!-- ヘルプテキスト -->
    <div style="font-size: 12px; color: #888; margin-top: 8px;">
      <i class="fas fa-info-circle" style="margin-right: 4px;"></i>
      相手の好きなものや趣味を記録しておくと、ギフト選びの参考になります（任意、最大30文字）
    </div>
    
    <!-- エラーメッセージ -->
    <% if gift_person.errors[:likes].any? %>
      <div style="color: #dc3545; font-size: 12px; margin-top: 8px;">
        <i class="fas fa-exclamation-triangle" style="margin-right: 4px;"></i>
        <%= gift_person.errors[:likes].first %>
      </div>
    <% end %>
  </div>

  <!-- 嫌いなもの入力 -->
  <div style="margin-bottom: 24px; text-align: left;">
    <%= f.label :dislikes, "苦手なもの・アレルギー", style: "
      display: block;
      margin-bottom: 8px;
      font-weight: 600;
      color: #555;
      font-size: 14px;
    " %>
    <%= f.text_area :dislikes, 
        style: "
          width: 100%;
          padding: 14px 16px;
          border: 2px solid #e1e5e9;
          border-radius: 8px;
          font-size: 16px;
          box-sizing: border-box;
          transition: border-color 0.3s ease;
          min-height: 80px;
          resize: vertical;
        ",
        placeholder: "例：辛いもの、香りの強いもの、特定の食材アレルギーなど",
        maxlength: 30 %>
    
    <!-- ヘルプテキスト -->
    <div style="font-size: 12px; color: #888; margin-top: 8px;">
      <i class="fas fa-info-circle" style="margin-right: 4px;"></i>
      相手の苦手なものやアレルギーを記録して、適切なギフト選びに役立てましょう（任意、最大30文字）
    </div>
    
    <!-- エラーメッセージ -->
    <% if gift_person.errors[:dislikes].any? %>
      <div style="color: #dc3545; font-size: 12px; margin-top: 8px;">
        <i class="fas fa-exclamation-triangle" style="margin-right: 4px;"></i>
        <%= gift_person.errors[:dislikes].first %>
      </div>
    <% end %>
  </div>

  <!-- メモ入力 -->
  <div style="margin-bottom: 32px; text-align: left;">
    <%= f.label :memo, "メモ", style: "
      display: block;
      margin-bottom: 8px;
      font-weight: 600;
      color: #555;
      font-size: 14px;
    " %>
    <%= f.text_area :memo, 
        style: "
          width: 100%;
          padding: 14px 16px;
          border: 2px solid #e1e5e9;
          border-radius: 8px;
          font-size: 16px;
          box-sizing: border-box;
          transition: border-color 0.3s ease;
          min-height: 100px;
          resize: vertical;
        ",
        placeholder: "相手に関するその他のメモ、過去のギフトの反応、特記事項など...",
        maxlength: 100 %>
    
    <!-- ヘルプテキスト -->
    <div style="font-size: 12px; color: #888; margin-top: 8px;">
      <i class="fas fa-info-circle" style="margin-right: 4px;"></i>
      相手に関する自由なメモを記録してください（任意、最大100文字）
    </div>
    
    <!-- エラーメッセージ -->
    <% if gift_person.errors[:memo].any? %>
      <div style="color: #dc3545; font-size: 12px; margin-top: 8px;">
        <i class="fas fa-exclamation-triangle" style="margin-right: 4px;"></i>
        <%= gift_person.errors[:memo].first %>
      </div>
    <% end %>
  </div>

  <!-- 送信ボタン -->
  <div style="margin-bottom: 32px;">
    <%= f.submit nil, style: "
      width: 100%;
      padding: 16px;
      background: linear-gradient(135deg, #FC913A 100%);
      color: white;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      font-size: 16px;
      font-weight: 600;
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    " %>
  </div>
<% end %>

<script>
// ギフト相手フォームのJavaScript処理
document.addEventListener('DOMContentLoaded', function() {
  // フォームのフォーカス時のボーダー色変更
  const inputs = document.querySelectorAll('input[type="text"], input[type="date"], select, textarea');
  
  inputs.forEach(function(input) {
    input.addEventListener('focus', function() {
      this.style.borderColor = '#FC913A';
    });
    
    input.addEventListener('blur', function() {
      this.style.borderColor = '#e1e5e9';
    });
  });

  // ギフト相手のプロフィール画像関連の要素
  const giftPersonAvatarInput = document.getElementById('gift-person-avatar-input');
  const giftPersonAvatarPreview = document.getElementById('gift-person-avatar-preview');
  const currentGiftPersonAvatar = document.getElementById('current-gift-person-avatar');
  const resetGiftPersonAvatarBtn = document.getElementById('reset-gift-person-avatar-btn');
  const removeGiftPersonAvatarCheckbox = document.getElementById('remove-gift-person-avatar-checkbox');
  
  // ギフト相手のプロフィール画像のプレビュー機能
  if (giftPersonAvatarInput) {
    giftPersonAvatarInput.addEventListener('change', function(e) {
      const file = e.target.files[0];
      
      if (file) {
        // ファイルサイズチェック（5MB）
        if (file.size > 5 * 1024 * 1024) {
          alert('ファイルサイズは5MB以下にしてください。');
          this.value = '';
          return;
        }
        
        // ファイル形式チェック
        const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];
        if (!allowedTypes.includes(file.type)) {
          alert('JPEG、PNG、WEBP形式のファイルのみアップロードできます。');
          this.value = '';
          return;
        }
        
        // プレビュー表示
        const reader = new FileReader();
        reader.onload = function(e) {
          giftPersonAvatarPreview.src = e.target.result;
          giftPersonAvatarPreview.style.display = 'block';
          currentGiftPersonAvatar.style.opacity = '0.3';
          resetGiftPersonAvatarBtn.style.display = 'inline-block';
          
          // 削除チェックボックスがある場合は無効化
          if (removeGiftPersonAvatarCheckbox) {
            removeGiftPersonAvatarCheckbox.checked = false;
            removeGiftPersonAvatarCheckbox.disabled = true;
          }
        };
        reader.readAsDataURL(file);
      }
    });
  }
  
  // ギフト相手のプロフィール画像プレビューリセット機能
  if (resetGiftPersonAvatarBtn) {
    resetGiftPersonAvatarBtn.addEventListener('click', function() {
      if (giftPersonAvatarInput) giftPersonAvatarInput.value = '';
      if (giftPersonAvatarPreview) {
        giftPersonAvatarPreview.src = '';
        giftPersonAvatarPreview.style.display = 'none';
      }
      if (currentGiftPersonAvatar) currentGiftPersonAvatar.style.opacity = '1';
      this.style.display = 'none';
      
      // 削除チェックボックスがある場合は有効化
      if (removeGiftPersonAvatarCheckbox) {
        removeGiftPersonAvatarCheckbox.disabled = false;
      }
    });
  }
  
  // ギフト相手のプロフィール画像削除チェックボックスの処理
  if (removeGiftPersonAvatarCheckbox) {
    removeGiftPersonAvatarCheckbox.addEventListener('change', function() {
      if (this.checked) {
        // プレビューをリセット
        if (giftPersonAvatarInput) giftPersonAvatarInput.value = '';
        if (giftPersonAvatarPreview) {
          giftPersonAvatarPreview.src = '';
          giftPersonAvatarPreview.style.display = 'none';
        }
        if (resetGiftPersonAvatarBtn) resetGiftPersonAvatarBtn.style.display = 'none';
        if (currentGiftPersonAvatar) currentGiftPersonAvatar.style.opacity = '0.3';
      } else {
        if (currentGiftPersonAvatar) currentGiftPersonAvatar.style.opacity = '1';
      }
    });
  }

  // 文字数カウンター（メモフィールド用）
  const memoField = document.getElementById('gift_person_memo');
  if (memoField) {
    const maxLength = parseInt(memoField.getAttribute('maxlength'));
    
    // 文字数表示要素を作成
    const counterDiv = document.createElement('div');
    counterDiv.style.cssText = 'font-size: 11px; color: #999; text-align: right; margin-top: 4px;';
    memoField.parentNode.appendChild(counterDiv);
    
    // 文字数更新関数
    function updateCounter() {
      const currentLength = memoField.value.length;
      counterDiv.textContent = `${currentLength}/${maxLength}文字`;
      
      if (currentLength > maxLength * 0.9) {
        counterDiv.style.color = '#dc3545';
      } else if (currentLength > maxLength * 0.8) {
        counterDiv.style.color = '#ffc107';
      } else {
        counterDiv.style.color = '#999';
      }
    }
    
    // 初期表示
    updateCounter();
    
    // 入力時の処理
    memoField.addEventListener('input', updateCounter);
  }
});
</script>
