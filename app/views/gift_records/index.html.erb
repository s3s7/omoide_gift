<% content_for(:title, "ギフト記録一覧") %>

<!-- メインコンテナ - 中央寄せ -->
<div class="max-w-6xl mx-auto">
<!-- ヘッダー部分 -->
<div class="mb-2 mt-2 text-center">
  <h2 class="text-2xl font-bold text-gray-800 mb-3">
    <i class="fas fa-gift mr-2 text-primary"></i>
    ギフト記録一覧
  </h2>
  <% if user_signed_in? %>
    <div class="flex justify-center">
      <%= link_to new_gift_record_path,
          class: "inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white btn-primary hover:bg-primary-hover focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary" do %>
        <i class="fas fa-plus mr-2"></i>
        新しい記録を作成
      <% end %>
    </div>
  <% end %>
</div>

  <!-- 検索・フィルター機能 -->
  <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-2 mb-2 max-w-4xl mx-auto">
    <%= form_with url: gift_records_path, method: :get, local: true, class: "space-y-2" do |f| %>
      <!-- 検索欄と検索ボタン -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-2">
        <!-- 検索キーワード（オートコンプリート付き） -->
        <div class="relative">
          <%= f.label :search, "検索", class: "block text-xs font-medium text-gray-700 mb-0.5" %>
          <%= f.text_field :search, 
              value: params[:search],
              placeholder: "アイテム名、メモで検索",
              id: "gift-records-search-input",
              autocomplete: "off",
              class: "w-full px-2 py-1.5 text-sm border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary" %>
          
          <!-- オートコンプリートドロップダウン -->
          <div id="gift-records-autocomplete-dropdown" 
               class="absolute z-50 w-full mt-0.5 bg-white border border-gray-300 rounded-md shadow-lg hidden max-h-48 overflow-y-auto">
            <!-- 検索結果がここに動的に追加される -->
          </div>
          
          <!-- ローディング表示 -->
          <div id="gift-records-search-loading" 
               class="absolute right-2 top-7 hidden">
            <i class="fas fa-spinner fa-spin text-gray-400 text-sm"></i>
          </div>
        </div>

        <!-- 検索ボタン -->
        <div class="flex items-end">
          <%= f.submit "検索", class: "w-full px-3 py-1.5 btn-primary text-white text-sm font-medium rounded-md hover:bg-primary-hover focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary" %>
        </div>
      </div>

      <!-- フィルターと値 -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-2">
        <!-- フィルタータイプ選択 -->
        <div>
          <%= f.label :filter_type, "フィルター", class: "block text-xs font-medium text-gray-700 mb-0.5" %>
          <%= f.select :filter_type, 
              options_for_select([
                ["選択してください", ""],
                ["関係性", "relationship"],
                ["イベント", "event"]
              ], params[:filter_type]),
              {},
              { 
                id: "filter-type-select",
                class: "w-full px-2 py-1.5 text-sm border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary" 
              } %>
          <%= f.hidden_field :filter_type, id: "filter-type-hidden" %>
        </div>

        <!-- 動的フィルター値選択 -->
        <div>
          <%= f.label :filter_value, "値", class: "block text-xs font-medium text-gray-700 mb-0.5" %>
          
          <!-- 関係性選択プルダウン -->
          <%= f.select :relationship_id, 
              options_for_select([["すべて", ""]] + @relationship_options, params[:relationship_id]),
              {},
              { 
                id: "relationship-select",
                class: "w-full px-2 py-1.5 text-sm border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary",
                style: (params[:filter_type] == "relationship" ? "" : "display: none;")
              } %>
          
          <!-- イベント選択プルダウン -->
          <%= f.select :event_id, 
              options_for_select([["すべて", ""]] + @event_options, params[:event_id]),
              {},
              { 
                id: "event-select",
                class: "w-full px-2 py-1.5 text-sm border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary",
                style: (params[:filter_type] == "event" ? "" : "display: none;")
              } %>
          
          <!-- プレースホルダー表示 -->
          <div id="filter-placeholder" class="w-full px-2 py-1.5 text-sm border border-gray-300 rounded-md shadow-sm bg-gray-50 text-gray-500" 
               style="<%= params[:filter_type].present? ? 'display: none;' : '' %>">
            左でフィルターを選択してください
          </div>
        </div>
      </div>

      <!-- 並び替え -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-2">
        <!-- 並び替えタイプ -->
        <div>
          <%= f.label :sort_by, "並び替え", class: "block text-xs font-medium text-gray-700 mb-0.5" %>
          <%= f.select :sort_by, 
              options_for_select([
                ["投稿日", "created_at"],
                ["お気に入り順", "favorites"]
              ], params[:sort_by]),
              { prompt: "選択してください" },
              { 
                class: "w-full px-2 py-1.5 text-sm border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary" 
              } %>
        </div>

        <!-- 並び順 -->
        <div>
          <%= f.label :sort_order, "順序", class: "block text-xs font-medium text-gray-700 mb-0.5" %>
          <%= f.select :sort_order, 
              options_for_select([
                ["昇順", "asc"],
                ["降順", "desc"]
              ], params[:sort_order]),
              { prompt: "選択してください" },
              { 
                class: "w-full px-2 py-1.5 text-sm border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary" 
              } %>
        </div>
      </div>

      <% if params[:search].present? || params[:relationship_id].present? || params[:event_id].present? || params[:sort_by].present? %>
        <div class="flex items-center justify-between pt-1.5 border-t border-gray-200">
          <span class="text-xs text-gray-600">
            <%= pluralize(@total_records, "件") %>の結果
          </span>
          <%= link_to "クリア", gift_records_path, class: "text-xs text-primary hover:text-primary-hover" %>
        </div>
      <% end %>
    <% end %>
  </div>
  
  <!-- 補助情報 -->
  <div class="text-center text-sm text-gray-600 mb-4 max-w-2xl mx-auto">
    <p>
      <i class="fas fa-info-circle mr-1 text-gray-400"></i>
      みんなの贈り物記録を見て、ギフト選びの参考にしよう
    </p>
  </div>
  
  <!-- ギフト記録一覧 -->
  <div class="text-center mb-3 mt-1">
    <h3 class="text-base font-medium text-gray-800">
      <i class="fas fa-th-large mr-1 text-primary"></i>
      記録一覧
      <span class="text-sm text-gray-500 font-normal ml-1">
        （<%= pluralize(@total_records, "件") %>）
      </span>
    </h3>
  </div>

  <% if @gift_records.any? %>

    <!-- カードグリッドレイアウト（レスポンシブ対応） -->
    <div class="grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 xl:grid-cols-5 gap-2 md:gap-3 lg:gap-4 justify-items-center">
      <% @gift_records.each do |record| %>
        <div class="gift-card-container bg-white rounded-lg shadow-md overflow-hidden transition-all duration-300 transform hover:shadow-xl hover:-translate-y-2" onclick="window.location.href='<%= gift_record_path(record) %>'" style="cursor: pointer;">
            <!-- 上半分：将来の画像表示エリア -->
            <div class="h-48 sm:h-52 md:h-56 lg:h-52 xl:h-56 bg-gradient-to-br from-pink-50 to-purple-50 flex items-center justify-center relative">
              <!-- 将来の画像配置用プレースホルダー -->
              <div class="text-center">
                <div class="w-16 h-16 sm:w-18 sm:h-18 lg:w-18 lg:h-18 xl:w-20 xl:h-20 mx-auto mb-2 sm:mb-3 bg-white rounded-full flex items-center justify-center shadow-sm">
                  <i class="fas fa-gift text-2xl sm:text-2xl lg:text-2xl xl:text-3xl text-primary"></i>
                </div>
                <p class="text-base sm:text-base lg:text-sm xl:text-base text-gray-500">画像エリア</p>
              </div>
            
              <!-- 操作ボタン（右上） - 編集・削除のみ -->
              <% if user_signed_in? && current_user == record.user %>
                <div class="absolute top-2 right-2 sm:top-3 sm:right-3 flex space-x-1 sm:space-x-2" onclick="event.stopPropagation();">
                  <%= link_to edit_gift_record_path(record), 
                      class: "p-1 sm:p-2 bg-white rounded-full shadow-sm hover:bg-gray-50 transition-colors",
                      title: "編集",
                      onclick: "event.stopPropagation();",
                      aria: { label: "#{record.item_name}を編集" } do %>
                    <i class="fas fa-edit text-blue-600 text-xs sm:text-sm"></i>
                  <% end %>
                  <button type="button"
                          onclick="event.stopPropagation(); showDeleteModal('<%= j(record.item_name) %>', '<%= gift_record_path(record) %>', '<%= form_authenticity_token %>');"
                          class="p-1 sm:p-2 bg-white rounded-full shadow-sm hover:bg-gray-50 transition-colors"
                          title="削除"
                          aria-label="<%= record.item_name %>を削除">
                    <i class="fas fa-trash text-red-600 text-xs sm:text-sm"></i>
                  </button>
                </div>
              <% end %>

              <!-- お気に入りボタン（左上） -->
              <div class="absolute top-2 left-2 sm:top-3 sm:left-3" onclick="event.stopPropagation();">
                <%= render 'shared/favorite_button', gift_record: record %>
              </div>

              <!-- 金額バッジ（右下） -->
              <% if record.amount.present? %>
                <div class="absolute bottom-2 right-2 sm:bottom-3 sm:right-3">
                  <span class="inline-flex items-center px-2 py-0.5 sm:px-2.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                    <%# ¥<%= number_with_delimiter(record.amount) %>
                  </span>
                </div>
              <% end %>
            </div>

            <!-- 下半分：ギフト情報 -->
            <div class="p-4 sm:p-4 md:p-4 lg:p-5 xl:p-5 bg-white">
              <!-- モバイル版表示項目 -->
              <div class="sm:hidden">
                <!-- 投稿者名 -->
                <div class="mb-2">
                  <div class="flex items-center text-sm">
                    <i class="fas fa-user mr-2 text-blue-500"></i>
                    <span class="font-medium" style="color: #374151 !important;">
                      <%= truncate(record.user.name.presence || "ユーザー", length: 15) %>
                    </span>
                  </div>
                </div>

                <!-- イベント -->
                <div class="mb-2">
                  <div class="flex items-center text-sm">
                    <i class="fas fa-calendar-star mr-2 text-purple-500"></i>
                    <span style="color: #4b5563 !important;">
                      <%= truncate(record.event&.name || "未設定", length: 20) %>
                    </span>
                  </div>
                </div>

                <!-- 関係性 -->
                <div class="mb-2">
                  <div class="flex items-center text-sm">
                    <i class="fas fa-users mr-2 text-indigo-500"></i>
                    <span style="color: #4b5563 !important;">
                      <%= truncate(record.gift_person&.relationship&.name || "未設定", length: 15) %>
                    </span>
                  </div>
                </div>

                <!-- アイテム名 -->
                <div class="mb-2">
                  <h4 class="text-xl sm:text-xl font-bold leading-tight" style="color: #111827 !important;">
                    <%= record.item_name.presence || "未設定" %>
                  </h4>
                </div>
              </div>

              <!-- デスクトップ版表示項目 -->
              <div class="hidden sm:block">
                <!-- アイテム名（メイン情報） -->
                <div class="mb-3">
                  <h4 class="text-lg lg:text-xl xl:text-xl font-bold leading-tight" style="color: #111827 !important;">
                    <%= record.item_name.presence || "未設定" %>
                  </h4>
                </div>

                <!-- 贈り先と金額 -->
                <div class="flex justify-between items-center mb-3">
                  <% if record.amount.present? %>
                    <div class="text-right">
                      <span class="text-lg lg:text-xl xl:text-xl font-bold" style="color: #059669 !important;">
                        <%# ¥<%= number_with_delimiter(record.amount) %>
                      </span>
                    </div>
                  <% end %>
                </div>

                <!-- イベントと日付 -->
                <div class="mb-2">
                  <div class="flex items-center text-sm">
                    <i class="fas fa-calendar mr-2 text-blue-500"></i>
                    <span style="color: #4b5563 !important;">
                      <%= truncate(record.event&.name || "未設定", length: 20) %>
                    </span>
                  </div>
                </div>

                <!-- 関係性 -->
                <div class="mb-3">
                  <div class="flex items-center text-sm">
                    <i class="fas fa-users mr-2 text-indigo-500"></i>
                    <span style="color: #4b5563 !important;">
                      <%= truncate(record.gift_person&.relationship&.name || "未設定", length: 15) %>
                    </span>
                  </div>
                </div>

                <!-- メモ（存在する場合） -->
                <% if record.memo.present? %>
                  <div class="mt-3 pt-3 border-t">
                    <p class="text-xs leading-relaxed" style="color: #6b7280 !important;">
                      <i class="fas fa-sticky-note mr-1 text-yellow-500"></i>
                      <%= truncate(record.memo, length: 60) %>
                    </p>
                  </div>
                <% end %>

                <!-- 投稿者情報（フッター） -->
                <div class="mt-3 pt-3 border-t">
                  <div class="flex items-center">
                    <div class="w-6 h-6 bg-gray-200 rounded-full flex items-center justify-center mr-2">
                      <i class="fas fa-user text-gray-500 text-xs"></i>
                    </div>
                    <div>
                      <p class="text-xs font-medium" style="color: #374151 !important;">
                        <%= record.user.name.presence || "ユーザー" %>
                      </p>
                      <p class="text-xs" style="color: #6b7280 !important;">
                        <%= l(record.created_at, format: :short) %>
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
        </div>
      <% end %>
    </div>
    <% else %>
      <!-- 空状態 -->
      <div class="text-center py-8">
        <div class="mx-auto h-24 w-24 text-gray-300">
          <i class="fas fa-gift text-6xl"></i>
        </div>
        <h3 class="mt-3 text-lg font-medium text-gray-900">
          <% if params[:search].present? %>
            検索結果が見つかりませんでした
          <% else %>
            ギフト記録がありません
          <% end %>
        </h3>
        <p class="mt-2 text-sm text-gray-500 max-w-sm mx-auto">
          <% if params[:search].present? %>
            検索条件を変更して再度お試しください。
          <% else %>
            最初のギフト記録を作成して、大切な思い出を記録しましょう。
          <% end %>
        </p>
        <div class="mt-4">
          <% if params[:search].present? %>
            <%= link_to gift_records_path,
                class: "inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 mr-3" do %>
              <i class="fas fa-list mr-2"></i>
              すべて表示
            <% end %>
          <% end %>
          <% if user_signed_in? %>
            <%= link_to new_gift_record_path,
                class: "inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white btn-primary hover:bg-primary-hover focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary" do %>
              <i class="fas fa-plus mr-2"></i>
              <% if params[:search].present? %>新しい記録を作成<% else %>最初の記録を作成<% end %>
            <% end %>
          <% else %>
            <%= link_to new_user_session_path,
                class: "inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" do %>
              <i class="fas fa-sign-in-alt mr-2"></i>
              ログインして記録を作成
            <% end %>
          <% end %>
        </div>
      </div>
    <% end %>
  </div>
</div>

<!-- メインコンテナ終了 -->
</div>

<script>
// ギフト記録一覧のオートコンプリート機能
(function() {
  let searchTimeout;
  let currentRequest;
  
  function initializeGiftRecordsAutocomplete() {
    // 要素の存在確認
    const searchInput = document.getElementById('gift-records-search-input');
    const dropdown = document.getElementById('gift-records-autocomplete-dropdown');
    const loading = document.getElementById('gift-records-search-loading');
    
    // 必要な要素が存在しない場合は何もしない
    if (!searchInput || !dropdown || !loading) {
      return;
    }
    
    // 既に初期化済みの場合はスキップ（data属性で管理）
    if (searchInput.dataset.autocompleteInitialized === 'true') {
      return;
    }
    
    const form = searchInput.closest('form');
    if (!form) return;
    
    // 初期化完了をマーク
    searchInput.dataset.autocompleteInitialized = 'true';
  
  // 検索入力処理
  searchInput.addEventListener('input', function(e) {
    const query = e.target.value.trim();
    
    // リクエストのデバウンス
    clearTimeout(searchTimeout);
    
    if (query.length >= 1) {
      searchTimeout = setTimeout(() => performAutocomplete(query), 300);
    } else {
      hideDropdown();
    }
  });

  // CSRF トークンを取得（utils.jsのグローバル関数を使用）

  // オートコンプリート実行
  function performAutocomplete(query) {
    // 既存のリクエストをキャンセル
    if (currentRequest) {
      currentRequest.abort();
    }

    showLoading();

    currentRequest = new AbortController();
    
    const headers = {
      'Accept': 'application/json',
      'Content-Type': 'application/json',
      'X-Requested-With': 'XMLHttpRequest'
    };

    const csrfToken = window.getCSRFToken();
    if (csrfToken) {
      headers['X-CSRF-Token'] = csrfToken;
    }
    
    fetch(`/gift_records/autocomplete?q=${encodeURIComponent(query)}`, {
      signal: currentRequest.signal,
      headers: headers
    })
    .then(response => {
      if (!response.ok) throw new Error('Network response was not ok');
      return response.json();
    })
    .then(data => {
      hideLoading();
      displayResults(data.results);
    })
    .catch(error => {
      if (error.name !== 'AbortError') {
        console.error('Autocomplete error:', error);
        hideLoading();
        hideDropdown();
      }
    });
  }

  // 検索結果表示
  function displayResults(results) {
    if (results.length === 0) {
      hideDropdown();
      return;
    }

    const html = results.map(result => {
      const typeIcon = getTypeIcon(result.type);
      const typeLabel = getTypeLabel(result.type);
      
      return `
        <div class="autocomplete-item px-3 py-2 hover:bg-primary-50 cursor-pointer border-b border-gray-100 last:border-b-0" 
             data-display-text="${escapeHtml(result.display_text)}" 
             data-id="${result.id}">
          <div class="flex items-start space-x-2">
            <div class="flex-shrink-0 w-6 h-6 bg-primary-100 rounded-full flex items-center justify-center">
              <i class="${typeIcon} text-primary text-xs"></i>
            </div>
            <div class="flex-1 min-w-0">
              <div class="text-xs font-medium text-gray-900">
                ${result.search_highlight}
              </div>
              <div class="text-xs text-gray-500 mt-0.5">
                ${typeLabel}
              </div>
            </div>
          </div>
        </div>
      `;
    }).join('');

    dropdown.innerHTML = html;
    showDropdown();
    
    // クリックイベントの追加
    dropdown.querySelectorAll('.autocomplete-item').forEach(item => {
      item.addEventListener('click', function() {
        const displayText = this.dataset.displayText;
        searchInput.value = displayText;
        hideDropdown();
        form.submit();
      });
    });
  }

  // タイプ別アイコン
  function getTypeIcon(type) {
    switch(type) {
      case 'item': return 'fas fa-gift';
      case 'memo': return 'fas fa-sticky-note';
      default: return 'fas fa-search';
    }
  }

  // タイプ別ラベル
  function getTypeLabel(type) {
    switch(type) {
      case 'item': return 'アイテム';
      case 'memo': return 'メモ';
      default: return '検索';
    }
  }

  // HTML エスケープ
  function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
  }

  // ローディング表示
  function showLoading() {
    loading.classList.remove('hidden');
  }

  function hideLoading() {
    loading.classList.add('hidden');
  }

  // ドロップダウン表示
  function showDropdown() {
    dropdown.classList.remove('hidden');
  }

  function hideDropdown() {
    dropdown.classList.add('hidden');
  }

    // 外部クリック時にドロップダウンを閉じる
    function handleOutsideClick(e) {
      if (!searchInput.contains(e.target) && !dropdown.contains(e.target)) {
        hideDropdown();
      }
    }
    
    document.addEventListener('click', handleOutsideClick);

  // キーボードナビゲーション
  searchInput.addEventListener('keydown', function(e) {
    const items = dropdown.querySelectorAll('.autocomplete-item');
    const activeItem = dropdown.querySelector('.autocomplete-item.bg-primary-100');
    
    if (e.key === 'ArrowDown') {
      e.preventDefault();
      if (activeItem) {
        activeItem.classList.remove('bg-primary-100');
        const next = activeItem.nextElementSibling || items[0];
        next.classList.add('bg-primary-100');
      } else if (items.length > 0) {
        items[0].classList.add('bg-primary-100');
      }
    } else if (e.key === 'ArrowUp') {
      e.preventDefault();
      if (activeItem) {
        activeItem.classList.remove('bg-primary-100');
        const prev = activeItem.previousElementSibling || items[items.length - 1];
        prev.classList.add('bg-primary-100');
      } else if (items.length > 0) {
        items[items.length - 1].classList.add('bg-primary-100');
      }
    } else if (e.key === 'Enter') {
      if (activeItem) {
        e.preventDefault();
        activeItem.click();
      }
    } else if (e.key === 'Escape') {
      hideDropdown();
    }
  });
  }

  // クリーンアップ関数
  function cleanupGiftRecordsAutocomplete() {
    if (currentRequest) {
      currentRequest.abort();
    }
    if (searchTimeout) {
      clearTimeout(searchTimeout);
    }
    
    // data属性をクリア
    const searchInput = document.getElementById('gift-records-search-input');
    if (searchInput) {
      searchInput.dataset.autocompleteInitialized = 'false';
    }
  }

  // Turbo対応のイベントリスナー
  document.addEventListener('turbo:load', initializeGiftRecordsAutocomplete);
  document.addEventListener('DOMContentLoaded', initializeGiftRecordsAutocomplete);
  
  // ページ離脱時のクリーンアップ
  document.addEventListener('turbo:before-visit', cleanupGiftRecordsAutocomplete);
  document.addEventListener('beforeunload', cleanupGiftRecordsAutocomplete);
})();

// 動的フィルター機能
(function() {
  function initializeDynamicFilter() {
    const filterTypeSelect = document.getElementById('filter-type-select');
    const filterTypeHidden = document.getElementById('filter-type-hidden');
    const relationshipSelect = document.getElementById('relationship-select');
    const eventSelect = document.getElementById('event-select');
    const placeholder = document.getElementById('filter-placeholder');
    
    if (!filterTypeSelect || !filterTypeHidden || !relationshipSelect || !eventSelect || !placeholder) {
      return;
    }
    
    // 初期状態の設定
    function updateFilterDisplay() {
      const selectedType = filterTypeSelect.value;
      
      // hidden fieldを更新
      filterTypeHidden.value = selectedType;
      
      // すべて非表示にする
      relationshipSelect.style.display = 'none';
      eventSelect.style.display = 'none';
      placeholder.style.display = 'none';
      
      // 選択されたタイプに応じて表示
      if (selectedType === 'relationship') {
        relationshipSelect.style.display = 'block';
        // イベント選択をクリア
        eventSelect.value = '';
      } else if (selectedType === 'event') {
        eventSelect.style.display = 'block';
        // 関係性選択をクリア
        relationshipSelect.value = '';
      } else {
        placeholder.style.display = 'block';
        // 両方クリア
        relationshipSelect.value = '';
        eventSelect.value = '';
      }
    }
    
    // フィルタータイプ変更時の処理
    filterTypeSelect.addEventListener('change', updateFilterDisplay);
    
    // 初期表示の設定
    updateFilterDisplay();
  }
  
  // Turbo対応のイベントリスナー
  document.addEventListener('turbo:load', initializeDynamicFilter);
  document.addEventListener('DOMContentLoaded', initializeDynamicFilter);
})();

// ギフト記録シェア機能
(function() {
  // シェアデータを格納する変数
  let shareGiftRecord = null;
  let lastCreatedGiftRecordId = null;

  // シェア確認モーダルの初期化
  function initializeShareModal() {
    <% if @share_gift_record %>
      // サーバーサイドからデータを受け取り
      shareGiftRecord = {
        id: <%= @share_gift_record.id %>,
        itemName: "<%= j(@share_gift_record.item_name) %>",
        giftPersonName: "<%= j(@share_gift_record.gift_person&.name || '未設定') %>",
        eventName: "<%= j(@share_gift_record.event&.name || '未設定') %>",
        relationshipName: "<%= j(@share_gift_record.gift_person&.relationship&.name || '未設定') %>",
        giftAt: "<%= @share_gift_record.gift_at&.strftime('%Y年%m月%d日') || '未設定' %>",
        amount: "<%= @share_gift_record.amount&.to_s || '' %>",
        memo: "<%= j(truncate(@share_gift_record.memo.to_s, length: 50)) %>"
      };
      lastCreatedGiftRecordId = <%= @share_gift_record.id %>;
      
      // モーダルを表示
      showShareModal();
    <% else %>
      // URL パラメータから gift_record_id を取得してフォールバック
      const urlParams = new URLSearchParams(window.location.search);
      const giftRecordId = urlParams.get('gift_record_id');
      
      if (giftRecordId && urlParams.get('share_confirm') === 'true') {
        lastCreatedGiftRecordId = parseInt(giftRecordId);
        // 最小限のシェアデータを設定
        shareGiftRecord = {
          id: parseInt(giftRecordId)
        };
        showShareModal();
      }
    <% end %>
  }

  // シェアモーダル表示
  function showShareModal() {
    if (!shareGiftRecord) return;

    const modal = document.getElementById('share-confirmation-modal');
    const preview = document.getElementById('share-gift-preview');
    const textPreview = document.getElementById('share-text-preview');
    const lengthCounter = document.getElementById('share-text-length');

    if (!modal || !preview || !textPreview) return;

    // プレビュー内容を生成
    const previewHTML = `
      <div class="flex items-start space-x-3">
        <div class="flex-shrink-0 w-12 h-12 bg-primary-100 rounded-full flex items-center justify-center">
          <i class="fas fa-gift text-primary"></i>
        </div>
        <div class="flex-1 min-w-0">
          <div class="text-sm font-medium text-gray-900">
            ${escapeHtml(shareGiftRecord.itemName)}
          </div>
          <div class="text-xs text-gray-500 mt-1">
            <span class="inline-flex items-center">
              <i class="fas fa-user mr-1"></i>
              ${escapeHtml(shareGiftRecord.giftPersonName)}
            </span>
            <span class="ml-3 inline-flex items-center">
              <i class="fas fa-calendar mr-1"></i>
              ${shareGiftRecord.eventName}
            </span>
          </div>
        </div>
      </div>
    `;

    // シェアテキストを生成
    const shareText = generateShareText(shareGiftRecord);

    // UI更新
    preview.innerHTML = previewHTML;
    // 改行文字を<br>タグに変換してプレビュー表示
    const shareTextForDisplay = escapeHtml(shareText).replace(/\n/g, '<br>');
    textPreview.innerHTML = shareTextForDisplay;
    lengthCounter.textContent = shareText.length;

    // 文字数チェック
    if (shareText.length > 280) {
      lengthCounter.classList.add('text-red-600');
      lengthCounter.classList.remove('text-gray-500');
    } else {
      lengthCounter.classList.remove('text-red-600');
      lengthCounter.classList.add('text-gray-500');
    }

    // モーダル表示
    modal.classList.remove('hidden');
  }

  // シェアテキスト生成
  function generateShareText(record) {
    let text = `✨ ギフト記録を更新しました！\n\n`;
    text += `🎁 ギフトアイテム: ${record.itemName}\n`;
    text += `👥 関係性: ${record.relationshipName}\n`;
    text += `📅 イベント: ${record.eventName}\n`;

    if (record.memo) {
      text += `📝 ${record.memo}\n`;
    }

    text += `\n #思い出ギフト #ギフト記録 #プレゼント #${record.eventName.replace(/\s+/g, '')}`;

    return text;
  }

  // Xでシェア
  window.shareToX = function() {
    if (!shareGiftRecord) return;

    const shareText = generateShareText(shareGiftRecord);
    
    // 詳細画面のURLを安全に生成
    let detailUrl;
    if (shareGiftRecord && shareGiftRecord.id) {
      detailUrl = `${window.location.origin}/gift_records/${shareGiftRecord.id}`;
    } else if (lastCreatedGiftRecordId) {
      detailUrl = `${window.location.origin}/gift_records/${lastCreatedGiftRecordId}`;
    } else {
      // 最終フォールバック: 現在のページURLを使用
      detailUrl = window.location.href;
    }
    
    const url = encodeURIComponent(detailUrl);
    const tweetUrl = `https://x.com/intent/tweet?text=${encodeURIComponent(shareText)}&url=${url}`;
    
    // 新しいウィンドウでXを開く
    const width = 550;
    const height = 420;
    const left = (window.innerWidth - width) / 2;
    const top = (window.innerHeight - height) / 2;
    
    window.open(
      tweetUrl,
      'share-twitter',
      `width=${width},height=${height},left=${left},top=${top},resizable=yes,scrollbars=yes`
    );
    
    // モーダルを閉じる
    closeShareModal();
  };

  // シェアモーダルを閉じる
  window.closeShareModal = async function() {
    const modal = document.getElementById('share-confirmation-modal');
    if (modal) {
      modal.classList.add('hidden');
    }
    
    // シェア拒否をサーバーに記録（完了を待つ）
    if (shareGiftRecord && shareGiftRecord.id) {
      try {
        await fetch('/gift_records/dismiss_share', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': window.getCSRFToken(),
            'Accept': 'application/json'
          },
          body: JSON.stringify({ gift_record_id: shareGiftRecord.id })
        });
      } catch (error) {
        // エラーが発生してもページ遷移は実行
      }
    }
    
    // 確実にパラメータなしのURLに遷移
    window.location.href = '/gift_records';
  };


  // HTMLエスケープ関数
  function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
  }

  // ESCキーでモーダルを閉じる
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      closeShareModal();
    }
  });

  // 初期化
  document.addEventListener('turbo:load', initializeShareModal);
  document.addEventListener('DOMContentLoaded', initializeShareModal);
})();
</script>

<!-- 削除確認モーダル -->
<%= render 'shared/delete_confirmation_modal' %>

<!-- シェア確認モーダル -->
<%= render 'shared/share_confirmation_modal' %>
